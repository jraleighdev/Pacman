let t;var e;function i(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}(e=t||(t={}))[e.RIGHT=4]="RIGHT",e[e.UP=3]="UP",e[e.LEFT=2]="LEFT",e[e.BOTTOM=1]="BOTTOM";class s{}function r(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}i(s,"score",0),i(s,"lives",3),i(s,"fps",30),i(s,"ghostCount",4),i(s,"rectSize",20),i(s,"wallColor","#342DCA"),i(s,"wallSpaceWidth",s.rectSize/1.5),i(s,"wallOffset",(s.rectSize-s.wallSpaceWidth)/2),i(s,"wallInnerColor","black"),i(s,"ghostImageLocations",[{x:0,y:0},{x:176,y:0},{x:0,y:121},{x:176,y:121}]),i(s,"map",[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,1],[1,2,1,1,1,2,1,1,1,2,1,2,1,1,1,2,1,1,1,2,1],[1,2,1,1,1,2,1,1,1,2,1,2,1,1,1,2,1,1,1,2,1],[1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],[1,2,1,1,1,2,1,2,1,1,1,1,1,2,1,2,1,1,1,2,1],[1,2,2,2,2,2,1,2,2,2,1,2,2,2,1,2,2,2,2,2,1],[1,1,1,1,1,2,1,1,1,2,1,2,1,1,1,2,1,1,1,1,1],[0,0,0,0,1,2,1,2,2,2,2,2,2,2,1,2,1,0,0,0,0],[1,1,1,1,1,2,1,2,1,1,2,1,1,2,1,2,1,1,1,1,1],[2,2,2,2,2,2,2,2,1,2,2,2,1,2,2,2,2,2,2,2,2],[1,1,1,1,1,2,1,2,1,2,2,2,1,2,1,2,1,1,1,1,1],[0,0,0,0,1,2,1,2,1,1,1,1,1,2,1,2,1,0,0,0,0],[0,0,0,0,1,2,1,2,2,2,2,2,2,2,1,2,1,0,0,0,0],[1,1,1,1,1,2,2,2,1,1,1,1,1,2,2,2,1,1,1,1,1],[1,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,1],[1,2,1,1,1,2,1,1,1,2,1,2,1,1,1,2,1,1,1,2,1],[1,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,1],[1,1,2,2,1,2,1,2,1,1,1,1,1,2,1,2,1,2,2,1,1],[1,2,2,2,2,2,1,2,2,2,1,2,2,2,1,2,2,2,2,2,1],[1,2,1,1,1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,2,1],[1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]),i(s,"randomTargetsForGhosts",[{x:1*s.rectSize,y:1*s.rectSize},{x:1*s.rectSize,y:(s.map.length-2)*s.rectSize},{x:(s.map[0].length-2)*s.rectSize,y:s.rectSize},{x:(s.map[0].length-2)*s.rectSize,y:(s.map.length-2)*s.rectSize}]);class h{constructor(e,i,s,h,a,o,c,n,l,g,m,d,p,S,f=t.RIGHT){this.x=e,this.y=i,this.width=s,this.height=h,this.speed=a,this.imageX=o,this.imageY=c,this.imageWidth=n,this.imageHeight=l,this.range=g,this.randomTargetsForGhosts=m,this.pacman=d,this.images=p,this.ctx=S,this.direction=f,r(this,"randomTargetIndex",Math.floor(4*Math.random())),r(this,"target",void 0),r(this,"currentFrame",0),r(this,"frameCount",0),this.target=this.randomTargetsForGhosts[this.randomTargetIndex],setInterval((()=>{this.changeRandomDirection()}),1e4)}isInRange(){const t=Math.abs(this.pacman.getMapX()-this.getMapX()),e=Math.abs(this.pacman.getMapY()-this.getMapY());return Math.sqrt(t*t+e*e)<=this.range}changeRandomDirection(){this.randomTargetIndex+=1,this.randomTargetIndex=this.randomTargetIndex%4}moveProcess(){this.isInRange()?this.target=this.pacman:this.target=this.randomTargetsForGhosts[this.randomTargetIndex],this.changeDirectionIfPossible(),this.moveForwards(),this.checkCollisions()&&this.moveBackwards()}moveBackwards(){switch(this.direction){case t.RIGHT:this.x-=this.speed;break;case t.UP:this.y+=this.speed;break;case t.LEFT:this.x+=this.speed;break;case t.BOTTOM:this.y-=this.speed}}moveForwards(){switch(this.direction){case t.RIGHT:this.x+=this.speed;break;case t.UP:this.y-=this.speed;break;case t.LEFT:this.x-=this.speed;break;case t.BOTTOM:this.y+=this.speed}}checkCollisions(){let t=!1;return 1!=s.map[Math.floor(this.y/s.rectSize)][Math.floor(this.x/s.rectSize)]&&1!=s.map[Math.floor(this.y/s.rectSize+.9999)][Math.floor(this.x/s.rectSize)]&&1!=s.map[Math.floor(this.y/s.rectSize)][Math.floor(this.x/s.rectSize+.9999)]&&1!=s.map[Math.floor(this.y/s.rectSize+.9999)][Math.floor(this.x/s.rectSize+.9999)]||(t=!0),t}changeDirectionIfPossible(){const e=this.direction;this.direction=this.calculateNewDirection(s.map,Math.floor(this.target.x/s.rectSize),Math.floor(this.target.y/s.rectSize)),void 0!==this.direction?(this.getMapY()==this.getMapYRightSide()||this.direction!=t.LEFT&&this.direction!=t.RIGHT||(this.direction=t.UP),this.getMapX()!=this.getMapXRightSide()&&this.direction==t.UP&&(this.direction=t.LEFT),this.moveForwards(),this.checkCollisions()?(this.moveBackwards(),this.direction=e):this.moveBackwards()):this.direction=e}calculateNewDirection(t,e,i){const s=[];for(let e=0;e<t.length;e++)s[e]=t[e].slice();const r=[{x:this.getMapX(),y:this.getMapY(),rightX:this.getMapXRightSide(),rightY:this.getMapYRightSide(),moves:[]}];for(;r.length>0;){const t=r.shift();if(t?.x==e&&t?.y==i)return t?.moves[0];{s[t.y][t.x]=1;const e=this.addNeighbors(t,s);for(let t=0;t<e.length;t++)r.push(e[t])}}return 1}addNeighbors(e,i){const s=[],r=i.length,h=i[0].length;if(e.x-1>=0&&e.x-1<r&&1!=i[e.y][e.x-1]){const i=e.moves.slice();i.push(t.LEFT),s.push({x:e.x-1,y:e.y,moves:i})}if(e.x+1>=0&&e.x+1<r&&1!=i[e.y][e.x+1]){const i=e.moves.slice();i.push(t.RIGHT),s.push({x:e.x+1,y:e.y,moves:i})}if(e.y-1>=0&&e.y-1<h&&1!=i[e.y-1][e.x]){const i=e.moves.slice();i.push(t.UP),s.push({x:e.x,y:e.y-1,moves:i})}if(e.y+1>=0&&e.y+1<h&&1!=i[e.y+1][e.x]){const i=e.moves.slice();i.push(t.BOTTOM),s.push({x:e.x,y:e.y+1,moves:i})}return s}getMapX(){return Math.floor(this.x/s.rectSize)}getMapY(){return Math.floor(this.y/s.rectSize)}getMapXRightSide(){return Math.floor((.99*this.x+s.rectSize)/s.rectSize)}getMapYRightSide(){return Math.floor((.99*this.y+s.rectSize)/s.rectSize)}changeAnimation(){this.currentFrame=this.currentFrame==this.frameCount?1:this.currentFrame+1}draw(){this.ctx.save(),this.ctx.drawImage(this.images,this.imageX,this.imageY,this.imageWidth,this.imageHeight,this.x,this.y,this.width,this.height),this.ctx.restore()}}function a(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class o{constructor(e,i,s,r,h,o,c,n=t.RIGHT){this.x=e,this.y=i,this.width=s,this.height=r,this.speed=h,this.ctx=o,this.images=c,this.direction=n,a(this,"nextDirection",t.RIGHT),a(this,"frameCount",7),a(this,"currentFrame",1),setInterval((()=>{this.changeAnimation()}),100)}moveProcess(){this.changeDirectionIfPossible(),this.moveForwards(),this.checkCollision()&&this.moveBackWards()}eat(){for(let t=0;t<s.map.length;t++)for(let e=0;e<s.map[0].length;e++)2==s.map[t][e]&&this.getMapX()==e&&this.getMapY()==t&&(s.map[t][e]=3,s.score++)}moveBackWards(){switch(this.direction){case t.RIGHT:this.x-=this.speed;break;case t.LEFT:this.x+=this.speed;break;case t.UP:this.y+=this.speed;break;case t.BOTTOM:this.y-=this.speed}}moveForwards(){switch(this.direction){case t.RIGHT:this.x+=this.speed;break;case t.LEFT:this.x-=this.speed;break;case t.UP:this.y-=this.speed;break;case t.BOTTOM:this.y+=this.speed}}checkCollision(){let t=!1;return 1!=s.map[Math.floor(this.y/s.rectSize)][Math.floor(this.x/s.rectSize)]&&1!=s.map[Math.floor(this.y/s.rectSize+.9999)][Math.floor(this.x/s.rectSize)]&&1!=s.map[Math.floor(this.y/s.rectSize)][Math.floor(this.x/s.rectSize+.9999)]&&1!=s.map[Math.floor(this.y/s.rectSize+.9999)][Math.floor(this.x/s.rectSize+.9999)]||(t=!0),t}checkGhostCollision(t){for(let e=0;e<t.length;e++){const i=t[e];if(i.getMapX()==this.getMapX()&&i.getMapY()==this.getMapY())return!0}return!1}changeDirectionIfPossible(){if(this.direction===this.nextDirection)return;const t=this.direction;this.direction=this.nextDirection,this.moveForwards(),this.checkCollision()?(this.moveBackWards(),this.direction=t):this.moveBackWards()}changeAnimation(){this.currentFrame=this.currentFrame==this.frameCount?1:this.currentFrame+1}draw(){this.ctx.save(),this.ctx.translate(this.x+s.rectSize/2,this.y+s.rectSize/2),this.ctx.rotate(90*this.direction*Math.PI/180),this.ctx.translate(-this.x-s.rectSize/2,-this.y-s.rectSize/2),this.ctx.drawImage(this.images,(this.currentFrame-1)*s.rectSize,0,s.rectSize,s.rectSize,this.x,this.y,this.width,this.height),this.ctx.restore()}getMapX(){return Math.floor(this.x/s.rectSize)}getMapY(){return Math.floor(this.y/s.rectSize)}getMapXRightSide(){return Math.floor((.99*this.x+s.rectSize)/s.rectSize)}getMapYRightSide(){return Math.floor((.99*this.y+s.rectSize)/s.rectSize)}}const c=document.getElementById("canvas"),n=c.getContext("2d"),l=document.getElementById("animations"),g=document.getElementById("ghosts"),m=(t,e,i,s,r)=>{n.fillStyle=r,n.fillRect(t,e,i,s)};let d,p;const S=()=>{d=new o(s.rectSize,s.rectSize,s.rectSize,s.rectSize,s.rectSize/5,n,l)},f=()=>{p=[];for(let t=0;t<2*s.ghostCount;t++){const e=new h(9*s.rectSize+(t%2==0?0:1)*s.rectSize,10*s.rectSize+(t%2==0?0:1)*s.rectSize,s.rectSize,s.rectSize,d.speed/2,s.ghostImageLocations[t%4].x,s.ghostImageLocations[t%4].y,124,116,6+t,s.randomTargetsForGhosts,d,g,n);p.push(e)}},z=()=>{s.lives--,S(),f(),0==s.lives&&console.log("Game Over!")},x=()=>{m(0,0,c.width,c.height,"black"),(()=>{for(let t=0;t<s.map.length;t++)for(let e=0;e<s.map[0].length;e++)1===s.map[t][e]&&m(e*s.rectSize,t*s.rectSize,s.rectSize,s.rectSize,s.wallColor),e>0&&1==s.map[t][e-1]&&m(e*s.rectSize,t*s.rectSize+s.wallOffset,s.wallSpaceWidth+s.wallOffset,s.wallSpaceWidth,s.wallInnerColor),e<s.map[0].length-1&&1==s.map[t][e+1]&&m(e*s.rectSize+s.wallOffset,t*s.rectSize+s.wallOffset,s.wallSpaceWidth+s.wallOffset,s.wallSpaceWidth,s.wallInnerColor),t>0&&1==s.map[t-1][e]&&m(e*s.rectSize+s.wallOffset,t*s.rectSize,s.wallSpaceWidth,s.wallSpaceWidth+s.wallOffset,s.wallInnerColor),t<s.map.length-1&&1==s.map[t+1][e]&&m(e*s.rectSize+s.wallOffset,t*s.rectSize+s.wallOffset,s.wallSpaceWidth,s.wallSpaceWidth+s.wallOffset,s.wallInnerColor)})(),(()=>{for(let t=0;t<s.map.length;t++)for(let e=0;e<s.map[0].length;e++)2==s.map[t][e]&&m(e*s.rectSize+s.rectSize/3,t*s.rectSize+s.rectSize/3,s.rectSize/3,s.rectSize/3,"#FEB897")})(),(()=>{for(let t=0;t<p.length;t++)p[t].draw()})(),d.draw(),n.font="20px Emulogic",n.fillStyle="white",n.fillText("Score: "+s.score,0,s.rectSize*(s.map.length+1)),(()=>{n.font="20px Emulogic",n.fillStyle="white",n.fillText("Lives: ",220,s.rectSize*(s.map.length+1));for(let t=0;t<s.lives;t++)n.drawImage(l,2*s.rectSize,0,s.rectSize,s.rectSize,350+t*s.rectSize,s.rectSize*s.map.length+2,s.rectSize,s.rectSize)})()},u=()=>{d.moveProcess(),d.eat(),(()=>{for(let t=0;t<p.length;t++)p[t].moveProcess()})(),d.checkGhostCollision(p)&&z(),x(),requestAnimationFrame(u)};S(),f(),u(),window.addEventListener("keydown",(e=>{const i=e.keyCode;setTimeout((()=>{37==i||65==i?(console.log("left"),d.nextDirection=t.LEFT):38==i||87==i?d.nextDirection=t.UP:39==i||68==i?(console.log("right"),d.nextDirection=t.RIGHT):40!=i&&83!=i||(d.nextDirection=t.BOTTOM)}),1)}));